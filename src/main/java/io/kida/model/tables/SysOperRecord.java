/*
 * This file is generated by jOOQ.
 */
package io.kida.model.tables;


import io.kida.model.Indexes;
import io.kida.model.Keys;
import io.kida.model.Tools;
import io.kida.model.tables.records.SysOperRecordRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 系统操作记录表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysOperRecord extends TableImpl<SysOperRecordRecord> {

    private static final long serialVersionUID = -1693350749;

    /**
     * The reference instance of <code>tools.sys_oper_record</code>
     */
    public static final SysOperRecord SYS_OPER_RECORD = new SysOperRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysOperRecordRecord> getRecordType() {
        return SysOperRecordRecord.class;
    }

    /**
     * The column <code>tools.sys_oper_record.OPER_ID</code>. 操作id
     */
    public final TableField<SysOperRecordRecord, Long> OPER_ID = createField(DSL.name("OPER_ID"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "操作id");

    /**
     * The column <code>tools.sys_oper_record.USER_ID</code>. 用户id
     */
    public final TableField<SysOperRecordRecord, Long> USER_ID = createField(DSL.name("USER_ID"), org.jooq.impl.SQLDataType.BIGINT, this, "用户id");

    /**
     * The column <code>tools.sys_oper_record.OPER_PAGE</code>. 操作页面url地址
     */
    public final TableField<SysOperRecordRecord, String> OPER_PAGE = createField(DSL.name("OPER_PAGE"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "操作页面url地址");

    /**
     * The column <code>tools.sys_oper_record.OPER_TIME</code>. 操作时间
     */
    public final TableField<SysOperRecordRecord, LocalDateTime> OPER_TIME = createField(DSL.name("OPER_TIME"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "操作时间");

    /**
     * The column <code>tools.sys_oper_record.OPER_BEFORE_JSON</code>. 操作前json信息
     */
    public final TableField<SysOperRecordRecord, String> OPER_BEFORE_JSON = createField(DSL.name("OPER_BEFORE_JSON"), org.jooq.impl.SQLDataType.CLOB, this, "操作前json信息");

    /**
     * The column <code>tools.sys_oper_record.OPER_AFTER_JSON</code>. 操作后json信息
     */
    public final TableField<SysOperRecordRecord, String> OPER_AFTER_JSON = createField(DSL.name("OPER_AFTER_JSON"), org.jooq.impl.SQLDataType.CLOB, this, "操作后json信息");

    /**
     * The column <code>tools.sys_oper_record.OPER_CONTENT</code>. 操作中文记录
     */
    public final TableField<SysOperRecordRecord, String> OPER_CONTENT = createField(DSL.name("OPER_CONTENT"), org.jooq.impl.SQLDataType.CLOB, this, "操作中文记录");

    /**
     * Create a <code>tools.sys_oper_record</code> table reference
     */
    public SysOperRecord() {
        this(DSL.name("sys_oper_record"), null);
    }

    /**
     * Create an aliased <code>tools.sys_oper_record</code> table reference
     */
    public SysOperRecord(String alias) {
        this(DSL.name(alias), SYS_OPER_RECORD);
    }

    /**
     * Create an aliased <code>tools.sys_oper_record</code> table reference
     */
    public SysOperRecord(Name alias) {
        this(alias, SYS_OPER_RECORD);
    }

    private SysOperRecord(Name alias, Table<SysOperRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysOperRecord(Name alias, Table<SysOperRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("系统操作记录表"), TableOptions.table());
    }

    public <O extends Record> SysOperRecord(Table<O> child, ForeignKey<O, SysOperRecordRecord> key) {
        super(child, key, SYS_OPER_RECORD);
    }

    @Override
    public Schema getSchema() {
        return Tools.TOOLS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_OPER_RECORD_IDX_SOR_DATE, Indexes.SYS_OPER_RECORD_IDX_SOR_USER);
    }

    @Override
    public Identity<SysOperRecordRecord, Long> getIdentity() {
        return Keys.IDENTITY_SYS_OPER_RECORD;
    }

    @Override
    public UniqueKey<SysOperRecordRecord> getPrimaryKey() {
        return Keys.KEY_SYS_OPER_RECORD_PRIMARY;
    }

    @Override
    public List<UniqueKey<SysOperRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<SysOperRecordRecord>>asList(Keys.KEY_SYS_OPER_RECORD_PRIMARY);
    }

    @Override
    public SysOperRecord as(String alias) {
        return new SysOperRecord(DSL.name(alias), this);
    }

    @Override
    public SysOperRecord as(Name alias) {
        return new SysOperRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysOperRecord rename(String name) {
        return new SysOperRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysOperRecord rename(Name name) {
        return new SysOperRecord(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, String, LocalDateTime, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
