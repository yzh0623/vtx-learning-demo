/*
 * This file is generated by jOOQ.
 */
package io.kida.model.tables.daos;


import io.github.jklingsporn.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.kida.model.tables.Md5Change;
import io.kida.model.tables.records.Md5ChangeRecord;

import java.util.Collection;

import org.jooq.Configuration;


import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.github.jklingsporn.vertx.jooq.completablefuture.VertxDAO;
import io.github.jklingsporn.vertx.jooq.completablefuture.jdbc.JDBCCompletableFutureQueryExecutor;
/**
 * md5转换明文表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Md5ChangeDao extends AbstractVertxDAO<Md5ChangeRecord, io.kida.model.tables.pojos.Md5Change, Long, CompletableFuture<List<io.kida.model.tables.pojos.Md5Change>>, CompletableFuture<io.kida.model.tables.pojos.Md5Change>, CompletableFuture<Integer>, CompletableFuture<Long>> implements io.github.jklingsporn.vertx.jooq.completablefuture.VertxDAO<Md5ChangeRecord,io.kida.model.tables.pojos.Md5Change,Long> {

    /**
     * @param configuration The Configuration used for rendering and query execution.
     * @param vertx the vertx instance
     */
    public Md5ChangeDao(Configuration configuration, io.vertx.core.Vertx vertx) {
        super(Md5Change.MD5_CHANGE, io.kida.model.tables.pojos.Md5Change.class, new JDBCCompletableFutureQueryExecutor<Md5ChangeRecord,io.kida.model.tables.pojos.Md5Change,Long>(configuration,io.kida.model.tables.pojos.Md5Change.class,vertx));
    }

    @Override
    protected Long getId(io.kida.model.tables.pojos.Md5Change object) {
        return object.getId();
    }

    /**
     * Find records that have <code>MD5_CODE IN (values)</code> asynchronously
     */
    public CompletableFuture<List<io.kida.model.tables.pojos.Md5Change>> findManyByMd5Code(Collection<String> values) {
        return findManyByCondition(Md5Change.MD5_CHANGE.MD5_CODE.in(values));
    }

    /**
     * Find records that have <code>PLAIN_TEXT IN (values)</code> asynchronously
     */
    public CompletableFuture<List<io.kida.model.tables.pojos.Md5Change>> findManyByPlainText(Collection<String> values) {
        return findManyByCondition(Md5Change.MD5_CHANGE.PLAIN_TEXT.in(values));
    }

    /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     */
    public CompletableFuture<List<io.kida.model.tables.pojos.Md5Change>> findManyByStatus(Collection<Integer> values) {
        return findManyByCondition(Md5Change.MD5_CHANGE.STATUS.in(values));
    }

    @Override
    public JDBCCompletableFutureQueryExecutor<Md5ChangeRecord,io.kida.model.tables.pojos.Md5Change,Long> queryExecutor(){
        return (JDBCCompletableFutureQueryExecutor<Md5ChangeRecord,io.kida.model.tables.pojos.Md5Change,Long>) super.queryExecutor();
    }
}
