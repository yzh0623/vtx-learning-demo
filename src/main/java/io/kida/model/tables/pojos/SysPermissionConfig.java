/*
 * This file is generated by jOOQ.
 */
package io.kida.model.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * 权限配置表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysPermissionConfig implements VertxPojo, Serializable {

    private static final long serialVersionUID = -1229328190;

    private Long          permissionConfigId;
    private String        permissionUrl;
    private String        permissionConfig;
    private Integer       seqNo;
    private String        remark;
    private String        permissionName;
    private String        icon;
    private Boolean       permissionType;
    private Integer       pPermissionId;
    private String        sysId;
    private Integer       sortNo;
    private Integer       display;
    private Integer       aliveFlag;
    private Long          addUserId;
    private LocalDateTime addTime;
    private Long          oprUserId;
    private LocalDateTime oprTime;
    private String        subsysCode;
    private Byte          checkFlag;

    public SysPermissionConfig() {}

    public SysPermissionConfig(SysPermissionConfig value) {
        this.permissionConfigId = value.permissionConfigId;
        this.permissionUrl = value.permissionUrl;
        this.permissionConfig = value.permissionConfig;
        this.seqNo = value.seqNo;
        this.remark = value.remark;
        this.permissionName = value.permissionName;
        this.icon = value.icon;
        this.permissionType = value.permissionType;
        this.pPermissionId = value.pPermissionId;
        this.sysId = value.sysId;
        this.sortNo = value.sortNo;
        this.display = value.display;
        this.aliveFlag = value.aliveFlag;
        this.addUserId = value.addUserId;
        this.addTime = value.addTime;
        this.oprUserId = value.oprUserId;
        this.oprTime = value.oprTime;
        this.subsysCode = value.subsysCode;
        this.checkFlag = value.checkFlag;
    }

    public SysPermissionConfig(
        Long          permissionConfigId,
        String        permissionUrl,
        String        permissionConfig,
        Integer       seqNo,
        String        remark,
        String        permissionName,
        String        icon,
        Boolean       permissionType,
        Integer       pPermissionId,
        String        sysId,
        Integer       sortNo,
        Integer       display,
        Integer       aliveFlag,
        Long          addUserId,
        LocalDateTime addTime,
        Long          oprUserId,
        LocalDateTime oprTime,
        String        subsysCode,
        Byte          checkFlag
    ) {
        this.permissionConfigId = permissionConfigId;
        this.permissionUrl = permissionUrl;
        this.permissionConfig = permissionConfig;
        this.seqNo = seqNo;
        this.remark = remark;
        this.permissionName = permissionName;
        this.icon = icon;
        this.permissionType = permissionType;
        this.pPermissionId = pPermissionId;
        this.sysId = sysId;
        this.sortNo = sortNo;
        this.display = display;
        this.aliveFlag = aliveFlag;
        this.addUserId = addUserId;
        this.addTime = addTime;
        this.oprUserId = oprUserId;
        this.oprTime = oprTime;
        this.subsysCode = subsysCode;
        this.checkFlag = checkFlag;
    }

    public Long getPermissionConfigId() {
        return this.permissionConfigId;
    }

    public SysPermissionConfig setPermissionConfigId(Long permissionConfigId) {
        this.permissionConfigId = permissionConfigId;
        return this;
    }

    public String getPermissionUrl() {
        return this.permissionUrl;
    }

    public SysPermissionConfig setPermissionUrl(String permissionUrl) {
        this.permissionUrl = permissionUrl;
        return this;
    }

    public String getPermissionConfig() {
        return this.permissionConfig;
    }

    public SysPermissionConfig setPermissionConfig(String permissionConfig) {
        this.permissionConfig = permissionConfig;
        return this;
    }

    public Integer getSeqNo() {
        return this.seqNo;
    }

    public SysPermissionConfig setSeqNo(Integer seqNo) {
        this.seqNo = seqNo;
        return this;
    }

    public String getRemark() {
        return this.remark;
    }

    public SysPermissionConfig setRemark(String remark) {
        this.remark = remark;
        return this;
    }

    public String getPermissionName() {
        return this.permissionName;
    }

    public SysPermissionConfig setPermissionName(String permissionName) {
        this.permissionName = permissionName;
        return this;
    }

    public String getIcon() {
        return this.icon;
    }

    public SysPermissionConfig setIcon(String icon) {
        this.icon = icon;
        return this;
    }

    public Boolean getPermissionType() {
        return this.permissionType;
    }

    public SysPermissionConfig setPermissionType(Boolean permissionType) {
        this.permissionType = permissionType;
        return this;
    }

    public Integer getPPermissionId() {
        return this.pPermissionId;
    }

    public SysPermissionConfig setPPermissionId(Integer pPermissionId) {
        this.pPermissionId = pPermissionId;
        return this;
    }

    public String getSysId() {
        return this.sysId;
    }

    public SysPermissionConfig setSysId(String sysId) {
        this.sysId = sysId;
        return this;
    }

    public Integer getSortNo() {
        return this.sortNo;
    }

    public SysPermissionConfig setSortNo(Integer sortNo) {
        this.sortNo = sortNo;
        return this;
    }

    public Integer getDisplay() {
        return this.display;
    }

    public SysPermissionConfig setDisplay(Integer display) {
        this.display = display;
        return this;
    }

    public Integer getAliveFlag() {
        return this.aliveFlag;
    }

    public SysPermissionConfig setAliveFlag(Integer aliveFlag) {
        this.aliveFlag = aliveFlag;
        return this;
    }

    public Long getAddUserId() {
        return this.addUserId;
    }

    public SysPermissionConfig setAddUserId(Long addUserId) {
        this.addUserId = addUserId;
        return this;
    }

    public LocalDateTime getAddTime() {
        return this.addTime;
    }

    public SysPermissionConfig setAddTime(LocalDateTime addTime) {
        this.addTime = addTime;
        return this;
    }

    public Long getOprUserId() {
        return this.oprUserId;
    }

    public SysPermissionConfig setOprUserId(Long oprUserId) {
        this.oprUserId = oprUserId;
        return this;
    }

    public LocalDateTime getOprTime() {
        return this.oprTime;
    }

    public SysPermissionConfig setOprTime(LocalDateTime oprTime) {
        this.oprTime = oprTime;
        return this;
    }

    public String getSubsysCode() {
        return this.subsysCode;
    }

    public SysPermissionConfig setSubsysCode(String subsysCode) {
        this.subsysCode = subsysCode;
        return this;
    }

    public Byte getCheckFlag() {
        return this.checkFlag;
    }

    public SysPermissionConfig setCheckFlag(Byte checkFlag) {
        this.checkFlag = checkFlag;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SysPermissionConfig (");

        sb.append(permissionConfigId);
        sb.append(", ").append(permissionUrl);
        sb.append(", ").append(permissionConfig);
        sb.append(", ").append(seqNo);
        sb.append(", ").append(remark);
        sb.append(", ").append(permissionName);
        sb.append(", ").append(icon);
        sb.append(", ").append(permissionType);
        sb.append(", ").append(pPermissionId);
        sb.append(", ").append(sysId);
        sb.append(", ").append(sortNo);
        sb.append(", ").append(display);
        sb.append(", ").append(aliveFlag);
        sb.append(", ").append(addUserId);
        sb.append(", ").append(addTime);
        sb.append(", ").append(oprUserId);
        sb.append(", ").append(oprTime);
        sb.append(", ").append(subsysCode);
        sb.append(", ").append(checkFlag);

        sb.append(")");
        return sb.toString();
    }

    public SysPermissionConfig(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public SysPermissionConfig fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setPermissionConfigId(json.getLong("PERMISSION_CONFIG_ID"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("PERMISSION_CONFIG_ID","java.lang.Long",e);
        }
        try {
            setPermissionUrl(json.getString("PERMISSION_URL"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("PERMISSION_URL","java.lang.String",e);
        }
        try {
            setPermissionConfig(json.getString("PERMISSION_CONFIG"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("PERMISSION_CONFIG","java.lang.String",e);
        }
        try {
            setSeqNo(json.getInteger("SEQ_NO"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("SEQ_NO","java.lang.Integer",e);
        }
        try {
            setRemark(json.getString("REMARK"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("REMARK","java.lang.String",e);
        }
        try {
            setPermissionName(json.getString("PERMISSION_NAME"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("PERMISSION_NAME","java.lang.String",e);
        }
        try {
            setIcon(json.getString("ICON"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("ICON","java.lang.String",e);
        }
        try {
            setPermissionType(json.getBoolean("PERMISSION_TYPE"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("PERMISSION_TYPE","java.lang.Boolean",e);
        }
        try {
            setPPermissionId(json.getInteger("P_PERMISSION_ID"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("P_PERMISSION_ID","java.lang.Integer",e);
        }
        try {
            setSysId(json.getString("SYS_ID"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("SYS_ID","java.lang.String",e);
        }
        try {
            setSortNo(json.getInteger("SORT_NO"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("SORT_NO","java.lang.Integer",e);
        }
        try {
            setDisplay(json.getInteger("DISPLAY"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("DISPLAY","java.lang.Integer",e);
        }
        try {
            setAliveFlag(json.getInteger("ALIVE_FLAG"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("ALIVE_FLAG","java.lang.Integer",e);
        }
        try {
            setAddUserId(json.getLong("ADD_USER_ID"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("ADD_USER_ID","java.lang.Long",e);
        }
        try {
            // Omitting unrecognized type java.time.LocalDateTime for column ADD_TIME!
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("ADD_TIME","java.time.LocalDateTime",e);
        }
        try {
            setOprUserId(json.getLong("OPR_USER_ID"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("OPR_USER_ID","java.lang.Long",e);
        }
        try {
            // Omitting unrecognized type java.time.LocalDateTime for column OPR_TIME!
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("OPR_TIME","java.time.LocalDateTime",e);
        }
        try {
            setSubsysCode(json.getString("SUBSYS_CODE"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("SUBSYS_CODE","java.lang.String",e);
        }
        try {
            setCheckFlag(json.getInteger("CHECK_FLAG")==null?null:json.getInteger("CHECK_FLAG").byteValue());
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("CHECK_FLAG","java.lang.Byte",e);
        }
        return this;
    }


    @Override
    public io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PERMISSION_CONFIG_ID",getPermissionConfigId());
        json.put("PERMISSION_URL",getPermissionUrl());
        json.put("PERMISSION_CONFIG",getPermissionConfig());
        json.put("SEQ_NO",getSeqNo());
        json.put("REMARK",getRemark());
        json.put("PERMISSION_NAME",getPermissionName());
        json.put("ICON",getIcon());
        json.put("PERMISSION_TYPE",getPermissionType());
        json.put("P_PERMISSION_ID",getPPermissionId());
        json.put("SYS_ID",getSysId());
        json.put("SORT_NO",getSortNo());
        json.put("DISPLAY",getDisplay());
        json.put("ALIVE_FLAG",getAliveFlag());
        json.put("ADD_USER_ID",getAddUserId());
        // Omitting unrecognized type java.time.LocalDateTime for column ADD_TIME!
        json.put("OPR_USER_ID",getOprUserId());
        // Omitting unrecognized type java.time.LocalDateTime for column OPR_TIME!
        json.put("SUBSYS_CODE",getSubsysCode());
        json.put("CHECK_FLAG",getCheckFlag());
        return json;
    }

}
