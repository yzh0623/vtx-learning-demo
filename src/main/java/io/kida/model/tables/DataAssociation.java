/*
 * This file is generated by jOOQ.
 */
package io.kida.model.tables;


import io.kida.model.Indexes;
import io.kida.model.Keys;
import io.kida.model.Tools;
import io.kida.model.tables.records.DataAssociationRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 数据关联
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataAssociation extends TableImpl<DataAssociationRecord> {

    private static final long serialVersionUID = -1634354283;

    /**
     * The reference instance of <code>tools.data_association</code>
     */
    public static final DataAssociation DATA_ASSOCIATION = new DataAssociation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DataAssociationRecord> getRecordType() {
        return DataAssociationRecord.class;
    }

    /**
     * The column <code>tools.data_association.drug_name</code>. 国产药品名称
     */
    public final TableField<DataAssociationRecord, String> DRUG_NAME = createField(DSL.name("drug_name"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "国产药品名称");

    /**
     * The column <code>tools.data_association.approval_number</code>.
     */
    public final TableField<DataAssociationRecord, String> APPROVAL_NUMBER = createField(DSL.name("approval_number"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>tools.data_association.production_unit</code>. 生产单位
     */
    public final TableField<DataAssociationRecord, String> PRODUCTION_UNIT = createField(DSL.name("production_unit"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "生产单位");

    /**
     * The column <code>tools.data_association.preparation</code>. 制剂
     */
    public final TableField<DataAssociationRecord, String> PREPARATION = createField(DSL.name("preparation"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "制剂");

    /**
     * The column <code>tools.data_association.specifications</code>. 规格
     */
    public final TableField<DataAssociationRecord, String> SPECIFICATIONS = createField(DSL.name("specifications"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "规格");

    /**
     * Create a <code>tools.data_association</code> table reference
     */
    public DataAssociation() {
        this(DSL.name("data_association"), null);
    }

    /**
     * Create an aliased <code>tools.data_association</code> table reference
     */
    public DataAssociation(String alias) {
        this(DSL.name(alias), DATA_ASSOCIATION);
    }

    /**
     * Create an aliased <code>tools.data_association</code> table reference
     */
    public DataAssociation(Name alias) {
        this(alias, DATA_ASSOCIATION);
    }

    private DataAssociation(Name alias, Table<DataAssociationRecord> aliased) {
        this(alias, aliased, null);
    }

    private DataAssociation(Name alias, Table<DataAssociationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("数据关联"), TableOptions.table());
    }

    public <O extends Record> DataAssociation(Table<O> child, ForeignKey<O, DataAssociationRecord> key) {
        super(child, key, DATA_ASSOCIATION);
    }

    @Override
    public Schema getSchema() {
        return Tools.TOOLS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DATA_ASSOCIATION_DA_DRUG_NAME);
    }

    @Override
    public List<UniqueKey<DataAssociationRecord>> getKeys() {
        return Arrays.<UniqueKey<DataAssociationRecord>>asList(Keys.KEY_DATA_ASSOCIATION_UNI_KEY);
    }

    @Override
    public DataAssociation as(String alias) {
        return new DataAssociation(DSL.name(alias), this);
    }

    @Override
    public DataAssociation as(Name alias) {
        return new DataAssociation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DataAssociation rename(String name) {
        return new DataAssociation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DataAssociation rename(Name name) {
        return new DataAssociation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
