/*
 * This file is generated by jOOQ.
 */
package io.kida.model.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.kida.model.tables.DataPrescription;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * 方剂数据
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataPrescriptionRecord extends TableRecordImpl<DataPrescriptionRecord> implements VertxPojo, Record2<String, String> {

    private static final long serialVersionUID = -1333133697;

    /**
     * Setter for <code>tools.data_prescription.drug_name</code>. 药品名称
     */
    public DataPrescriptionRecord setDrugName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>tools.data_prescription.drug_name</code>. 药品名称
     */
    public String getDrugName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>tools.data_prescription.variety</code>. 品种数据
     */
    public DataPrescriptionRecord setVariety(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>tools.data_prescription.variety</code>. 品种数据
     */
    public String getVariety() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DataPrescription.DATA_PRESCRIPTION.DRUG_NAME;
    }

    @Override
    public Field<String> field2() {
        return DataPrescription.DATA_PRESCRIPTION.VARIETY;
    }

    @Override
    public String component1() {
        return getDrugName();
    }

    @Override
    public String component2() {
        return getVariety();
    }

    @Override
    public String value1() {
        return getDrugName();
    }

    @Override
    public String value2() {
        return getVariety();
    }

    @Override
    public DataPrescriptionRecord value1(String value) {
        setDrugName(value);
        return this;
    }

    @Override
    public DataPrescriptionRecord value2(String value) {
        setVariety(value);
        return this;
    }

    @Override
    public DataPrescriptionRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DataPrescriptionRecord
     */
    public DataPrescriptionRecord() {
        super(DataPrescription.DATA_PRESCRIPTION);
    }

    /**
     * Create a detached, initialised DataPrescriptionRecord
     */
    public DataPrescriptionRecord(String drugName, String variety) {
        super(DataPrescription.DATA_PRESCRIPTION);

        set(0, drugName);
        set(1, variety);
    }

    public DataPrescriptionRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public DataPrescriptionRecord fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setDrugName(json.getString("drug_name"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("drug_name","java.lang.String",e);
        }
        try {
            setVariety(json.getString("variety"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("variety","java.lang.String",e);
        }
        return this;
    }


    @Override
    public io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("drug_name",getDrugName());
        json.put("variety",getVariety());
        return json;
    }

}
