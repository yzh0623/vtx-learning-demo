/*
 * This file is generated by jOOQ.
 */
package io.kida.model.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.UnexpectedJsonValueType;
import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.kida.model.tables.SysPermissionConfig;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 权限配置表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysPermissionConfigRecord extends UpdatableRecordImpl<SysPermissionConfigRecord> implements VertxPojo, Record19<Long, String, String, Integer, String, String, String, Boolean, Integer, String, Integer, Integer, Integer, Long, LocalDateTime, Long, LocalDateTime, String, Byte> {

    private static final long serialVersionUID = -336352384;

    /**
     * Setter for <code>tools.sys_permission_config.PERMISSION_CONFIG_ID</code>. 权限配置表主键
     */
    public SysPermissionConfigRecord setPermissionConfigId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.PERMISSION_CONFIG_ID</code>. 权限配置表主键
     */
    public Long getPermissionConfigId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>tools.sys_permission_config.PERMISSION_URL</code>. 链接地址.表示点击菜单或按钮触发的URL地址
     */
    public SysPermissionConfigRecord setPermissionUrl(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.PERMISSION_URL</code>. 链接地址.表示点击菜单或按钮触发的URL地址
     */
    public String getPermissionUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>tools.sys_permission_config.PERMISSION_CONFIG</code>. 权限.表示访问此地址需要具备的权限
     */
    public SysPermissionConfigRecord setPermissionConfig(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.PERMISSION_CONFIG</code>. 权限.表示访问此地址需要具备的权限
     */
    public String getPermissionConfig() {
        return (String) get(2);
    }

    /**
     * Setter for <code>tools.sys_permission_config.SEQ_NO</code>. 序号.shiro filter由上到下执行
     */
    public SysPermissionConfigRecord setSeqNo(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.SEQ_NO</code>. 序号.shiro filter由上到下执行
     */
    public Integer getSeqNo() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>tools.sys_permission_config.REMARK</code>. 备注
     */
    public SysPermissionConfigRecord setRemark(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.REMARK</code>. 备注
     */
    public String getRemark() {
        return (String) get(4);
    }

    /**
     * Setter for <code>tools.sys_permission_config.PERMISSION_NAME</code>. 菜单名称
     */
    public SysPermissionConfigRecord setPermissionName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.PERMISSION_NAME</code>. 菜单名称
     */
    public String getPermissionName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>tools.sys_permission_config.ICON</code>. 图标
     */
    public SysPermissionConfigRecord setIcon(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.ICON</code>. 图标
     */
    public String getIcon() {
        return (String) get(6);
    }

    /**
     * Setter for <code>tools.sys_permission_config.PERMISSION_TYPE</code>. 0目录 1 链接
     */
    public SysPermissionConfigRecord setPermissionType(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.PERMISSION_TYPE</code>. 0目录 1 链接
     */
    public Boolean getPermissionType() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>tools.sys_permission_config.P_PERMISSION_ID</code>. 父级id
     */
    public SysPermissionConfigRecord setPPermissionId(Integer value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.P_PERMISSION_ID</code>. 父级id
     */
    public Integer getPPermissionId() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>tools.sys_permission_config.SYS_ID</code>. 系统平台的标识
     */
    public SysPermissionConfigRecord setSysId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.SYS_ID</code>. 系统平台的标识
     */
    public String getSysId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>tools.sys_permission_config.SORT_NO</code>. 排序号
     */
    public SysPermissionConfigRecord setSortNo(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.SORT_NO</code>. 排序号
     */
    public Integer getSortNo() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>tools.sys_permission_config.DISPLAY</code>. 是否显示 1是 0 否
     */
    public SysPermissionConfigRecord setDisplay(Integer value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.DISPLAY</code>. 是否显示 1是 0 否
     */
    public Integer getDisplay() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>tools.sys_permission_config.ALIVE_FLAG</code>. 生效标志.1:生效;0:删除.
     */
    public SysPermissionConfigRecord setAliveFlag(Integer value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.ALIVE_FLAG</code>. 生效标志.1:生效;0:删除.
     */
    public Integer getAliveFlag() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>tools.sys_permission_config.ADD_USER_ID</code>. 添加用户编号
     */
    public SysPermissionConfigRecord setAddUserId(Long value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.ADD_USER_ID</code>. 添加用户编号
     */
    public Long getAddUserId() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>tools.sys_permission_config.ADD_TIME</code>. 添加时间
     */
    public SysPermissionConfigRecord setAddTime(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.ADD_TIME</code>. 添加时间
     */
    public LocalDateTime getAddTime() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>tools.sys_permission_config.OPR_USER_ID</code>. 修改用户编号
     */
    public SysPermissionConfigRecord setOprUserId(Long value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.OPR_USER_ID</code>. 修改用户编号
     */
    public Long getOprUserId() {
        return (Long) get(15);
    }

    /**
     * Setter for <code>tools.sys_permission_config.OPR_TIME</code>. 修改时间
     */
    public SysPermissionConfigRecord setOprTime(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.OPR_TIME</code>. 修改时间
     */
    public LocalDateTime getOprTime() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>tools.sys_permission_config.SUBSYS_CODE</code>. 系统标识
     */
    public SysPermissionConfigRecord setSubsysCode(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.SUBSYS_CODE</code>. 系统标识
     */
    public String getSubsysCode() {
        return (String) get(17);
    }

    /**
     * Setter for <code>tools.sys_permission_config.CHECK_FLAG</code>.
     */
    public SysPermissionConfigRecord setCheckFlag(Byte value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>tools.sys_permission_config.CHECK_FLAG</code>.
     */
    public Byte getCheckFlag() {
        return (Byte) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row19<Long, String, String, Integer, String, String, String, Boolean, Integer, String, Integer, Integer, Integer, Long, LocalDateTime, Long, LocalDateTime, String, Byte> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    @Override
    public Row19<Long, String, String, Integer, String, String, String, Boolean, Integer, String, Integer, Integer, Integer, Long, LocalDateTime, Long, LocalDateTime, String, Byte> valuesRow() {
        return (Row19) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.PERMISSION_CONFIG_ID;
    }

    @Override
    public Field<String> field2() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.PERMISSION_URL;
    }

    @Override
    public Field<String> field3() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.PERMISSION_CONFIG;
    }

    @Override
    public Field<Integer> field4() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.SEQ_NO;
    }

    @Override
    public Field<String> field5() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.REMARK;
    }

    @Override
    public Field<String> field6() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.PERMISSION_NAME;
    }

    @Override
    public Field<String> field7() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.ICON;
    }

    @Override
    public Field<Boolean> field8() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.PERMISSION_TYPE;
    }

    @Override
    public Field<Integer> field9() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.P_PERMISSION_ID;
    }

    @Override
    public Field<String> field10() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.SYS_ID;
    }

    @Override
    public Field<Integer> field11() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.SORT_NO;
    }

    @Override
    public Field<Integer> field12() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.DISPLAY;
    }

    @Override
    public Field<Integer> field13() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.ALIVE_FLAG;
    }

    @Override
    public Field<Long> field14() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.ADD_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.ADD_TIME;
    }

    @Override
    public Field<Long> field16() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.OPR_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.OPR_TIME;
    }

    @Override
    public Field<String> field18() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.SUBSYS_CODE;
    }

    @Override
    public Field<Byte> field19() {
        return SysPermissionConfig.SYS_PERMISSION_CONFIG.CHECK_FLAG;
    }

    @Override
    public Long component1() {
        return getPermissionConfigId();
    }

    @Override
    public String component2() {
        return getPermissionUrl();
    }

    @Override
    public String component3() {
        return getPermissionConfig();
    }

    @Override
    public Integer component4() {
        return getSeqNo();
    }

    @Override
    public String component5() {
        return getRemark();
    }

    @Override
    public String component6() {
        return getPermissionName();
    }

    @Override
    public String component7() {
        return getIcon();
    }

    @Override
    public Boolean component8() {
        return getPermissionType();
    }

    @Override
    public Integer component9() {
        return getPPermissionId();
    }

    @Override
    public String component10() {
        return getSysId();
    }

    @Override
    public Integer component11() {
        return getSortNo();
    }

    @Override
    public Integer component12() {
        return getDisplay();
    }

    @Override
    public Integer component13() {
        return getAliveFlag();
    }

    @Override
    public Long component14() {
        return getAddUserId();
    }

    @Override
    public LocalDateTime component15() {
        return getAddTime();
    }

    @Override
    public Long component16() {
        return getOprUserId();
    }

    @Override
    public LocalDateTime component17() {
        return getOprTime();
    }

    @Override
    public String component18() {
        return getSubsysCode();
    }

    @Override
    public Byte component19() {
        return getCheckFlag();
    }

    @Override
    public Long value1() {
        return getPermissionConfigId();
    }

    @Override
    public String value2() {
        return getPermissionUrl();
    }

    @Override
    public String value3() {
        return getPermissionConfig();
    }

    @Override
    public Integer value4() {
        return getSeqNo();
    }

    @Override
    public String value5() {
        return getRemark();
    }

    @Override
    public String value6() {
        return getPermissionName();
    }

    @Override
    public String value7() {
        return getIcon();
    }

    @Override
    public Boolean value8() {
        return getPermissionType();
    }

    @Override
    public Integer value9() {
        return getPPermissionId();
    }

    @Override
    public String value10() {
        return getSysId();
    }

    @Override
    public Integer value11() {
        return getSortNo();
    }

    @Override
    public Integer value12() {
        return getDisplay();
    }

    @Override
    public Integer value13() {
        return getAliveFlag();
    }

    @Override
    public Long value14() {
        return getAddUserId();
    }

    @Override
    public LocalDateTime value15() {
        return getAddTime();
    }

    @Override
    public Long value16() {
        return getOprUserId();
    }

    @Override
    public LocalDateTime value17() {
        return getOprTime();
    }

    @Override
    public String value18() {
        return getSubsysCode();
    }

    @Override
    public Byte value19() {
        return getCheckFlag();
    }

    @Override
    public SysPermissionConfigRecord value1(Long value) {
        setPermissionConfigId(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value2(String value) {
        setPermissionUrl(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value3(String value) {
        setPermissionConfig(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value4(Integer value) {
        setSeqNo(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value5(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value6(String value) {
        setPermissionName(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value7(String value) {
        setIcon(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value8(Boolean value) {
        setPermissionType(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value9(Integer value) {
        setPPermissionId(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value10(String value) {
        setSysId(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value11(Integer value) {
        setSortNo(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value12(Integer value) {
        setDisplay(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value13(Integer value) {
        setAliveFlag(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value14(Long value) {
        setAddUserId(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value15(LocalDateTime value) {
        setAddTime(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value16(Long value) {
        setOprUserId(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value17(LocalDateTime value) {
        setOprTime(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value18(String value) {
        setSubsysCode(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord value19(Byte value) {
        setCheckFlag(value);
        return this;
    }

    @Override
    public SysPermissionConfigRecord values(Long value1, String value2, String value3, Integer value4, String value5, String value6, String value7, Boolean value8, Integer value9, String value10, Integer value11, Integer value12, Integer value13, Long value14, LocalDateTime value15, Long value16, LocalDateTime value17, String value18, Byte value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysPermissionConfigRecord
     */
    public SysPermissionConfigRecord() {
        super(SysPermissionConfig.SYS_PERMISSION_CONFIG);
    }

    /**
     * Create a detached, initialised SysPermissionConfigRecord
     */
    public SysPermissionConfigRecord(Long permissionConfigId, String permissionUrl, String permissionConfig, Integer seqNo, String remark, String permissionName, String icon, Boolean permissionType, Integer pPermissionId, String sysId, Integer sortNo, Integer display, Integer aliveFlag, Long addUserId, LocalDateTime addTime, Long oprUserId, LocalDateTime oprTime, String subsysCode, Byte checkFlag) {
        super(SysPermissionConfig.SYS_PERMISSION_CONFIG);

        set(0, permissionConfigId);
        set(1, permissionUrl);
        set(2, permissionConfig);
        set(3, seqNo);
        set(4, remark);
        set(5, permissionName);
        set(6, icon);
        set(7, permissionType);
        set(8, pPermissionId);
        set(9, sysId);
        set(10, sortNo);
        set(11, display);
        set(12, aliveFlag);
        set(13, addUserId);
        set(14, addTime);
        set(15, oprUserId);
        set(16, oprTime);
        set(17, subsysCode);
        set(18, checkFlag);
    }

    public SysPermissionConfigRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public SysPermissionConfigRecord fromJson(io.vertx.core.json.JsonObject json) {
        try {
            setPermissionConfigId(json.getLong("PERMISSION_CONFIG_ID"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("PERMISSION_CONFIG_ID","java.lang.Long",e);
        }
        try {
            setPermissionUrl(json.getString("PERMISSION_URL"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("PERMISSION_URL","java.lang.String",e);
        }
        try {
            setPermissionConfig(json.getString("PERMISSION_CONFIG"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("PERMISSION_CONFIG","java.lang.String",e);
        }
        try {
            setSeqNo(json.getInteger("SEQ_NO"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("SEQ_NO","java.lang.Integer",e);
        }
        try {
            setRemark(json.getString("REMARK"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("REMARK","java.lang.String",e);
        }
        try {
            setPermissionName(json.getString("PERMISSION_NAME"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("PERMISSION_NAME","java.lang.String",e);
        }
        try {
            setIcon(json.getString("ICON"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("ICON","java.lang.String",e);
        }
        try {
            setPermissionType(json.getBoolean("PERMISSION_TYPE"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("PERMISSION_TYPE","java.lang.Boolean",e);
        }
        try {
            setPPermissionId(json.getInteger("P_PERMISSION_ID"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("P_PERMISSION_ID","java.lang.Integer",e);
        }
        try {
            setSysId(json.getString("SYS_ID"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("SYS_ID","java.lang.String",e);
        }
        try {
            setSortNo(json.getInteger("SORT_NO"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("SORT_NO","java.lang.Integer",e);
        }
        try {
            setDisplay(json.getInteger("DISPLAY"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("DISPLAY","java.lang.Integer",e);
        }
        try {
            setAliveFlag(json.getInteger("ALIVE_FLAG"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("ALIVE_FLAG","java.lang.Integer",e);
        }
        try {
            setAddUserId(json.getLong("ADD_USER_ID"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("ADD_USER_ID","java.lang.Long",e);
        }
        try {
            // Omitting unrecognized type java.time.LocalDateTime for column ADD_TIME!
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("ADD_TIME","java.time.LocalDateTime",e);
        }
        try {
            setOprUserId(json.getLong("OPR_USER_ID"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("OPR_USER_ID","java.lang.Long",e);
        }
        try {
            // Omitting unrecognized type java.time.LocalDateTime for column OPR_TIME!
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("OPR_TIME","java.time.LocalDateTime",e);
        }
        try {
            setSubsysCode(json.getString("SUBSYS_CODE"));
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("SUBSYS_CODE","java.lang.String",e);
        }
        try {
            setCheckFlag(json.getInteger("CHECK_FLAG")==null?null:json.getInteger("CHECK_FLAG").byteValue());
        } catch (java.lang.ClassCastException e) {
            throw new UnexpectedJsonValueType("CHECK_FLAG","java.lang.Byte",e);
        }
        return this;
    }


    @Override
    public io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PERMISSION_CONFIG_ID",getPermissionConfigId());
        json.put("PERMISSION_URL",getPermissionUrl());
        json.put("PERMISSION_CONFIG",getPermissionConfig());
        json.put("SEQ_NO",getSeqNo());
        json.put("REMARK",getRemark());
        json.put("PERMISSION_NAME",getPermissionName());
        json.put("ICON",getIcon());
        json.put("PERMISSION_TYPE",getPermissionType());
        json.put("P_PERMISSION_ID",getPPermissionId());
        json.put("SYS_ID",getSysId());
        json.put("SORT_NO",getSortNo());
        json.put("DISPLAY",getDisplay());
        json.put("ALIVE_FLAG",getAliveFlag());
        json.put("ADD_USER_ID",getAddUserId());
        // Omitting unrecognized type java.time.LocalDateTime for column ADD_TIME!
        json.put("OPR_USER_ID",getOprUserId());
        // Omitting unrecognized type java.time.LocalDateTime for column OPR_TIME!
        json.put("SUBSYS_CODE",getSubsysCode());
        json.put("CHECK_FLAG",getCheckFlag());
        return json;
    }

}
