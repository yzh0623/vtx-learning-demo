/*
 * This file is generated by jOOQ.
 */
package io.kida.model.tables;


import io.kida.model.Keys;
import io.kida.model.Tools;
import io.kida.model.tables.records.CmmItembankRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 中医药达人题目爬取
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CmmItembank extends TableImpl<CmmItembankRecord> {

    private static final long serialVersionUID = 1745389807;

    /**
     * The reference instance of <code>tools.cmm_itembank</code>
     */
    public static final CmmItembank CMM_ITEMBANK = new CmmItembank();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CmmItembankRecord> getRecordType() {
        return CmmItembankRecord.class;
    }

    /**
     * The column <code>tools.cmm_itembank.ID</code>.
     */
    public final TableField<CmmItembankRecord, Long> ID = createField(DSL.name("ID"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>tools.cmm_itembank.QUESTION_TITLE</code>.
     */
    public final TableField<CmmItembankRecord, String> QUESTION_TITLE = createField(DSL.name("QUESTION_TITLE"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>tools.cmm_itembank.OPTION_A</code>.
     */
    public final TableField<CmmItembankRecord, String> OPTION_A = createField(DSL.name("OPTION_A"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>tools.cmm_itembank.OPTION_B</code>.
     */
    public final TableField<CmmItembankRecord, String> OPTION_B = createField(DSL.name("OPTION_B"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>tools.cmm_itembank.OPTION_C</code>.
     */
    public final TableField<CmmItembankRecord, String> OPTION_C = createField(DSL.name("OPTION_C"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>tools.cmm_itembank.OPTION_D</code>.
     */
    public final TableField<CmmItembankRecord, String> OPTION_D = createField(DSL.name("OPTION_D"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>tools.cmm_itembank.OPTION_E</code>.
     */
    public final TableField<CmmItembankRecord, String> OPTION_E = createField(DSL.name("OPTION_E"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>tools.cmm_itembank.OPTION_F</code>.
     */
    public final TableField<CmmItembankRecord, String> OPTION_F = createField(DSL.name("OPTION_F"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>tools.cmm_itembank.ADD_TIME</code>.
     */
    public final TableField<CmmItembankRecord, LocalDateTime> ADD_TIME = createField(DSL.name("ADD_TIME"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>tools.cmm_itembank.ACTICLE_NAME</code>.
     */
    public final TableField<CmmItembankRecord, String> ACTICLE_NAME = createField(DSL.name("ACTICLE_NAME"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>tools.cmm_itembank.PAGE_NUM</code>.
     */
    public final TableField<CmmItembankRecord, Integer> PAGE_NUM = createField(DSL.name("PAGE_NUM"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>tools.cmm_itembank.SUBJECT_NUM</code>.
     */
    public final TableField<CmmItembankRecord, Integer> SUBJECT_NUM = createField(DSL.name("SUBJECT_NUM"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>tools.cmm_itembank</code> table reference
     */
    public CmmItembank() {
        this(DSL.name("cmm_itembank"), null);
    }

    /**
     * Create an aliased <code>tools.cmm_itembank</code> table reference
     */
    public CmmItembank(String alias) {
        this(DSL.name(alias), CMM_ITEMBANK);
    }

    /**
     * Create an aliased <code>tools.cmm_itembank</code> table reference
     */
    public CmmItembank(Name alias) {
        this(alias, CMM_ITEMBANK);
    }

    private CmmItembank(Name alias, Table<CmmItembankRecord> aliased) {
        this(alias, aliased, null);
    }

    private CmmItembank(Name alias, Table<CmmItembankRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("中医药达人题目爬取"), TableOptions.table());
    }

    public <O extends Record> CmmItembank(Table<O> child, ForeignKey<O, CmmItembankRecord> key) {
        super(child, key, CMM_ITEMBANK);
    }

    @Override
    public Schema getSchema() {
        return Tools.TOOLS;
    }

    @Override
    public Identity<CmmItembankRecord, Long> getIdentity() {
        return Keys.IDENTITY_CMM_ITEMBANK;
    }

    @Override
    public UniqueKey<CmmItembankRecord> getPrimaryKey() {
        return Keys.KEY_CMM_ITEMBANK_PRIMARY;
    }

    @Override
    public List<UniqueKey<CmmItembankRecord>> getKeys() {
        return Arrays.<UniqueKey<CmmItembankRecord>>asList(Keys.KEY_CMM_ITEMBANK_PRIMARY);
    }

    @Override
    public CmmItembank as(String alias) {
        return new CmmItembank(DSL.name(alias), this);
    }

    @Override
    public CmmItembank as(Name alias) {
        return new CmmItembank(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CmmItembank rename(String name) {
        return new CmmItembank(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CmmItembank rename(Name name) {
        return new CmmItembank(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, String, String, String, String, String, String, String, LocalDateTime, String, Integer, Integer> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
